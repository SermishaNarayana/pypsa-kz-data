name: linux test

on:
  push:
    branches:
    - ci-linux   # will be changed to main then
  pull_request:
    branches:
    - ci-linux   # will be changed to main then
  schedule:
  - cron: "0 5 * * TUE"

env:
  CACHE_NUMBER: 1  # Change this value to manually reset the environment cache

jobs:
  build:
    strategy:
      fail-fast: false  # don't break CI for ubuntu if windows fails before
      matrix:
        include:
          # Matrix required to handle environment caching with Mambaforge
        - os: ubuntu-latest
          label: ubuntu-latest
          prefix: /usr/share/miniconda3/envs/pypsa-earth

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Download PyPSA-Earth
      run: |
        cd ..
        git clone https://github.com/pypsa-meets-earth/pypsa-earth.git

    - name: Prepare dataset
      run: |
        mv ../pypsa-earth/* ..
        cd ..
        cp pypsa-kz-data/data/custom_powerplants.csv data/custom_powerplants.csv

    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: pypsa-earth
        use-mamba: true

    - name: Create environment cache
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ matrix.prefix }}
        key: ${{ matrix.label }}-conda-${{ hashFiles('envs/environment.yaml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}

    - name: Update environment due to outdated or unavailable cache
      if: steps.cache.outputs.cache-hit != 'true'
      run: mamba env update -n pypsa-earth -f ../envs/environment.yaml

    - name: Conda list
      run: |
        conda list

    - name: Test workflow
      run: |
        cp test/config_kz_test.yaml ../config.yaml
        cd ..
        snakemake -j1 retrieve_databundle_light 
        snakemake -j1 solve_everything 